# name: CI/CD pipeline

# Déclencher le pipeline lorsqu'un commit est poussé sur la branche principale
# on:
#   push:
#     branches:
#       - release
#       - main

# jobs:
#   build-and-deploy:
#     runs-on: ubuntu-latest

#     steps:
#       # Étape 1 : Récupérer le code source depuis le dépôt
#       - name: Checkout code
#         uses: actions/checkout@v2

#       # Étape 2 : Installer les dépendances et construire l'application React
#       - name: Build React app
#         run: |
#           npm install
#           npm run build

#       # Étape 3 : Construire l'image Docker
#       - name: Build docker image
#         run: docker build . --file dockerfile --tag password-genarare:${{ github.sha }}

#       # Étape 4 : Connexion à Docker Hub
#       - name: Login to Docker Hub
#         uses: docker/login-action@v2
#         with:
#           username: ${{ vars.DOCKERHUB_USERNAME }}
#           password: ${{ secrets.DOCKERHUB_PASSWORD }}

#       # Étape 5 : Envoyer l'image au registre Docker
#       - name: Build and push
#         uses: docker/build-push-action@v4
#         with:
#           push: true
#           tags: |
#             hermesn/password-genarare:latest
#             hermesn/password-genarare:${{ github.sha }}

#       # Étape 6 : Installer Docker Compose et déployer en production
#       - name: Install Docker Compose
#         run: |
#           sudo curl -L "https://github.com/docker/compose/releases/download/v2.20.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
#           sudo chmod +x /usr/local/bin/docker-compose
#           docker-compose --version

#       - name: Deploy on production
#         run: |
#           docker-compose -f docker-compose.yml down
#           docker-compose -f docker-compose.yml up -d
